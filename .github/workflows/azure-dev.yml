name: Azure Template Validation
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  template_validation_job:
    runs-on: ubuntu-latest
    environment: production
    name: template validation
    steps:
       # Step 1: Checkout the code from your repository 
      - name: Checkout code 
        uses: actions/checkout@v4 
      # Step 2: Validate the Azure template using microsoft/template-validation-action 
      - name: Validate Azure Template 
        uses: microsoft/template-validation-action@Latest
        with: 
          validateAzd: true
          useDevContainer: false
        id: validation
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }} 
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }} 
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }} 
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
          AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }} 
          AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }} 
          AZURE_ENV_OPENAI_LOCATION : ${{ secrets.AZURE_AI_DEPLOYMENT_LOCATION }}
          AZURE_ENV_MODEL_CAPACITY: 1
          AZURE_ENV_MODEL_4_1_CAPACITY: 1
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Step 3: Print the result of the validation 
      - name: print result
        run: cat ${{ steps.validation.outputs.resultFile }}
